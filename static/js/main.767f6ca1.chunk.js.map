{"version":3,"sources":["styles/controller.module.scss","lib/space.ts","components/controller/switch.tsx","lib/utils.ts","components/controller/gear.tsx","components/controller/controller.tsx","components/world.tsx","App.tsx","reportWebVitals.ts","index.tsx","styles/space.module.scss","styles/gear.module.scss","styles/switch.module.scss"],"names":["module","exports","asteroidImgPath","Engine","create","gravity","scale","renderOptions","width","height","wireframes","background","loadSvg","url","a","fetch","then","response","text","raw","window","DOMParser","parseFromString","loadCorners","root","color","vertexSets","selector","Array","prototype","slice","call","querySelectorAll","select","map","path","Svg","pathToVertices","idx","x","y","body","Bodies","fromVertices","render","fillStyle","strokeStyle","lineWidth","isStatic","Body","rotate","Math","PI","makeRandomPos","min","max","pos","Vector","random","Doggo","Moon","Earth","obj","magnitude","sub","position","asteroidRadius","trapezoid","sprite","texture","xScale","yScale","xOffset","yOffset","angle","friction","frictionAir","collisionFilter","mask","density","restitution","generateAsteroid","num","options","randX","randY","circle","Asteroids","fill","_","Switch","checked","toggle","children","className","styles","switchContainer","switch","type","onChange","slider","round","getKeyString","key","split","reduce","prev","cur","toLowerCase","push","toUpperCase","join","Gear","size","power","change","ref","useRef","changeByPosition","current","getBoundingClientRect","percent","left","val","handleMouseMove","event","clientX","handleMouseUp","document","removeEventListener","handleTouchMove","changedTouches","handleTouchEnd","preventDefault","onMouseDown","button","addEventListener","onTouchStart","rail","bar","style","i","step","thumb","Controller","rotateLeft","rotateRight","cancel","controllerContainer","onMouseUp","onTouchEnd","e","World","canvasRef","useState","matter","setMatter","boost","zoomIn","guide","setOptions","rotating","setRotating","setPower","useEffect","Common","setDecomp","require","engine","Render","canvas","Composite","add","world","corners","rectangle","mouse","Mouse","mouseConstraint","MouseConstraint","constraint","stiffness","visible","run","runner","Runner","stop","console","log","gravityHandler","resultant","forEach","asteroid","mult","div","applyForce","Events","on","off","smokes","frameCounter","boostHandler","smoke","opacity","origin","clone","unitForce","sin","cos","category","isSensor","unshift","length","remove","pop","cameraHandler","lookAt","guideHandler","doggoToMoon","distance","ctx","context","beginPath","setLineDash","from","moveTo","multiple","to","lineTo","stroke","font","fillText","rotationHandler","torque","spaceContainer","title","borderRadius","controlPanel","flexbox","optionContainer","Object","keys","option","App","display","alignItems","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.767f6ca1.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"controllerContainer\":\"controller_controllerContainer__18j9a\"};","import { Bodies, Body, Svg, Vector, Engine, Render } from \"matter-js\"\r\n\r\nexport const SpaceEngine = Engine.create({\r\n  gravity: {\r\n    scale: 0\r\n  },\r\n});\r\n\r\nexport const createRenderer = (canvas: HTMLCanvasElement) => {\r\n  if (!canvas)\r\n    return;\r\n  return Render.create({\r\n    canvas,\r\n    engine: SpaceEngine,\r\n    options: renderOptions\r\n  })\r\n}\r\n\r\nconst asteroidImgPath = [\r\n  'images/space/asteroid-1-r.png',\r\n  'images/space/asteroid-2-r.svg',\r\n  'images/space/asteroid-3-r.svg',\r\n  'images/space/asteroid-4-r.svg',\r\n  'images/space/earth-resized.png',\r\n];\r\n\r\nexport const renderOptions = {\r\n  width: 4000,\r\n  height: 4000,\r\n  wireframes: false,\r\n  background: '#1d1135',\r\n}\r\n\r\nconst select = function (root: Document, selector: string) {\r\n  return Array.prototype.slice.call(root.querySelectorAll(selector));\r\n};\r\n\r\nconst loadSvg = async function (url: string) {\r\n  return fetch(url)\r\n    .then(function (response) { return response.text(); })\r\n    .then(function (raw) { return (new window.DOMParser()).parseFromString(raw, 'image/svg+xml'); });\r\n};\r\n\r\nexport const loadCorners = () => loadSvg('./images/space/corner4.svg').then(function (root) {\r\n  const color = '#063e7b';\r\n\r\n  const vertexSets = select(root, 'path')\r\n    .map(function (path) { return Svg.pathToVertices(path, 30); });\r\n\r\n  const coords = [\r\n    [71, 71],\r\n    [renderOptions.width - 71, 71],\r\n    [renderOptions.width - 71, renderOptions.height - 71],\r\n    [71, renderOptions.height - 71],\r\n  ]\r\n\r\n  return coords.map(([x, y], idx) => {\r\n    const body = Bodies.fromVertices(x, y, vertexSets, {\r\n      render: {\r\n        fillStyle: color,\r\n        strokeStyle: color,\r\n        lineWidth: 1\r\n      },\r\n      isStatic: true,\r\n      //friction: 0\r\n      //angle: (Math.PI / 2.0 * idx)\r\n    }, true);\r\n\r\n    Body.rotate(body, Math.PI / 2 * idx);\r\n\r\n    return body;\r\n  });\r\n\r\n  /*return [Bodies.fromVertices(400, 80, vertexSets, {\r\n    render: {\r\n      fillStyle: color,\r\n      strokeStyle: color,\r\n      lineWidth: 1\r\n    }\r\n  }, true)];*/\r\n});\r\n\r\nconst asteroidRadius = 100;\r\n\r\nconst makeRandomPos = (min: Vector, max: Vector): Vector => {\r\n\r\n  const pos = Vector.create(min.x + Math.random() * (max.x - min.x),\r\n    min.y + Math.random() * (max.y - min.y));\r\n\r\n  for (const obj of [Doggo, Moon, Earth]) {\r\n    // so close to other objects\r\n    if (Vector.magnitude(Vector.sub(obj.position, pos)) < asteroidRadius * 3) {\r\n      return makeRandomPos(min, max);\r\n    }\r\n  }\r\n\r\n  return pos;\r\n}\r\n\r\nexport const Doggo = Bodies.trapezoid(1200, 3000, 175, 213, 1, {\r\n  render: {\r\n    sprite: {\r\n      texture: 'images/space/resized-color-2.png',\r\n      xScale: 0.5,\r\n      yScale: 0.5,\r\n      // @ts-ignore\r\n      xOffset: 0.17,\r\n      yOffset: 0.15,\r\n    },\r\n  },\r\n  angle: Math.PI / 2,\r\n  //torque: 200,\r\n  friction: 1,\r\n  frictionAir: 0.01,\r\n  collisionFilter: {\r\n    mask: 1\r\n  },\r\n  density: 0.1, // for small rocket\r\n  restitution: 0.1,\r\n  //frictionStatic: 1,\r\n})\r\n\r\nexport const generateAsteroid = (num: number, options: {\r\n  isStatic?: boolean\r\n  pos?: Vector\r\n} = {\r\n    isStatic: false,\r\n  }) => {\r\n\r\n  const { isStatic, pos } = options;\r\n\r\n  let x;\r\n  let y;\r\n\r\n  if (pos) {\r\n    x = pos.x;\r\n    y = pos.y;\r\n  } else {\r\n    const { x: randX, y: randY } = makeRandomPos(Vector.create(125, 125), Vector.create(renderOptions.width - 125, renderOptions.height - 125));\r\n    x = randX;\r\n    y = randY;\r\n  }\r\n\r\n  return Bodies.circle(x, y, asteroidRadius, {\r\n    render: {\r\n      sprite: {\r\n        texture: asteroidImgPath[num - 1],\r\n        xScale: 2,\r\n        yScale: 2,\r\n        // @ts-ignore\r\n      },\r\n    },\r\n    angle: Math.PI / 2,\r\n    //torque: 200,\r\n    friction: 1,\r\n    //frictionStatic: 0,\r\n    frictionAir: 0,\r\n    collisionFilter: {\r\n      mask: 1\r\n    },\r\n    density: 1,\r\n    restitution: 1,\r\n    isStatic\r\n  });\r\n}\r\n\r\nexport const Moon = generateAsteroid(4, {\r\n  // Position is essential\r\n  pos: {\r\n    //x: renderOptions.width - 800,\r\n    x: 3000,\r\n    y: 1000\r\n    //y: renderOptions.height / 2\r\n  },\r\n  isStatic: true\r\n})\r\n\r\nexport const Earth = generateAsteroid(5, {\r\n  pos: {\r\n    x: 1000,\r\n    y: 3000\r\n  },\r\n  isStatic: true\r\n})\r\n\r\n/*export const Asteroids: Matter.Body[] = [\r\n  generateAsteroid(1),\r\n  generateAsteroid(1),\r\n  generateAsteroid(1),\r\n  generateAsteroid(1),\r\n  //generateAsteroid(2),\r\n];*/\r\n\r\nconst makeDummies = (size: number) => {\r\n\r\n  const dummies = [];\r\n\r\n  \r\n\r\n}\r\n\r\nexport const Asteroids: Matter.Body[] = Array(10).fill(0).map(_ => generateAsteroid(1));\r\n\r\nexport interface ControlPanelOptions {\r\n  boost: boolean,\r\n  zoomIn: boolean,\r\n  guide: boolean\r\n}","import styles from '../../styles/switch.module.scss'\r\n\r\nexport default function Switch({ checked, toggle, children }: {\r\n  checked: boolean,\r\n  toggle: () => void,\r\n  children?: React.ReactNode\r\n}) {\r\n  return (\r\n    <div className={styles.switchContainer}>\r\n      <label className={styles.switch}>  \r\n        <input type='checkbox' checked={checked} onChange={toggle}></input>\r\n        <span className={`${styles.slider} ${styles.round}`}></span>\r\n      </label>\r\n      <div>\r\n        {children}\r\n      </div>\r\n    </div>\r\n  )\r\n}","export const getKeyString = (key: string) => {\r\n  return key.split('').reduce((prev, cur, idx) => {\r\n    if (cur === cur.toLowerCase()) {\r\n      if (idx === 0)\r\n        prev.push(cur.toUpperCase());\r\n      else\r\n        prev.push(cur)\r\n    } else {\r\n      prev.push(` ${cur}`);\r\n    }\r\n    return prev;\r\n  }, [] as string[]).join('');\r\n}","import React, { MouseEventHandler, TouchEventHandler, useRef, useState } from 'react'\r\nimport styles from '../../styles/gear.module.scss'\r\n\r\nexport default function Gear({ size = 5, power, change }: {\r\n  size?: number\r\n  power: number\r\n  change: (power: number) => void\r\n}) {\r\n\r\n  const ref = useRef<HTMLDivElement>(null);\r\n\r\n  const changeByPosition = (x: number) => {\r\n    if (ref.current) {\r\n      const { width, left } = ref.current.getBoundingClientRect();\r\n      const percent = (x - left) / width * 100;\r\n      const val = Math.round(percent / (100 / (size - 1)));\r\n      change(val);\r\n    }\r\n  }\r\n\r\n  const handleMouseDown: MouseEventHandler<HTMLDivElement> = (event) => {\r\n    event.preventDefault();\r\n\r\n    // only allow left click\r\n    if (event.button === 0) {\r\n      handleMouseMove(event);\r\n      document.addEventListener('mousemove', handleMouseMove);\r\n      document.addEventListener('mouseup', handleMouseUp);\r\n    }\r\n  }\r\n\r\n  const handleTouchStart: TouchEventHandler<HTMLDivElement> = (event) => {\r\n    handleTouchMove(event);\r\n    document.addEventListener('touchmove', handleTouchMove);\r\n    document.addEventListener('touchend', handleTouchEnd);\r\n  }\r\n\r\n  const handleMouseMove = (event: MouseEvent | React.MouseEvent) => {\r\n    changeByPosition(event.clientX);\r\n  }\r\n\r\n  const handleMouseUp = () => {\r\n    // clean-up\r\n    document.removeEventListener('mousemove', handleMouseMove);\r\n    document.removeEventListener('mouseup', handleMouseUp);\r\n  }\r\n\r\n  const handleTouchMove = (event: TouchEvent | React.TouchEvent) => {\r\n    changeByPosition(event.changedTouches[0].clientX);\r\n  }\r\n\r\n  const handleTouchEnd = (event: TouchEvent) => {\r\n    event.preventDefault();\r\n\r\n    // clean-up\r\n    document.removeEventListener('touchmove', handleTouchMove);\r\n    document.removeEventListener('touchend', handleTouchEnd);\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <div>🔥 Engine Power</div>\r\n      <div className={styles.slider} ref={ref} onMouseDown={handleMouseDown} onTouchStart={handleTouchStart}>\r\n        <span className={styles.rail}></span>\r\n        <span className={styles.bar} style={{ width: `${power / (size - 1) * 100}%` }}></span>\r\n        {Array(size).fill(0).map((_, i) => (\r\n          <span className={styles.step} style={{ left: `${i / (size - 1) * 100}%` }} key={i} />\r\n        ))}\r\n        <span className={styles.thumb} style={{ left: `${power / (size - 1) * 100}%` }}></span>\r\n      </div>\r\n    </>)\r\n}","import styles from '../../styles/controller.module.scss'\r\n\r\nexport default function Controller({ rotateLeft, rotateRight, cancel }: {\r\n  rotateLeft: () => void\r\n  rotateRight: () => void\r\n  cancel: () => void\r\n}) {\r\n  return (\r\n    <div>\r\n      <div>🕹️ Controller</div>\r\n      <div className={styles.controllerContainer}>\r\n        <span onMouseDown={rotateLeft} onMouseUp={cancel}\r\n          onTouchStart={rotateLeft}\r\n          onTouchEnd={(e) => {\r\n            e.preventDefault()\r\n            cancel()\r\n          }}>◀</span>\r\n        <span onMouseDown={rotateRight} onMouseUp={cancel}\r\n          onTouchStart={rotateRight}\r\n          onTouchEnd={(e) => {\r\n            e.preventDefault()\r\n            cancel()\r\n          }}>▶</span>\r\n      </div>\r\n    </div>)\r\n}","import { useEffect, useRef, useState } from 'react'\r\nimport { Asteroids, ControlPanelOptions, Doggo, Earth, loadCorners, Moon, renderOptions } from '../lib/space'\r\nimport Switch from './controller/switch';\r\nimport { Engine, Render, Runner, Bodies, Composite, Mouse, MouseConstraint, Common, Events, Body, Vector } from 'matter-js';\r\nimport { getKeyString } from '../lib/utils';\r\nimport styles from '../styles/space.module.scss'\r\nimport Gear from './controller/gear';\r\nimport Controller from './controller/controller';\r\n\r\nexport default function World() {\r\n  const canvasRef = useRef<HTMLCanvasElement>(null);\r\n\r\n  const [matter, setMatter] = useState<{\r\n    engine?: Engine,\r\n    render?: Render\r\n  }>({});\r\n\r\n  const [options, setOptions] = useState<ControlPanelOptions>({\r\n    boost: false,\r\n    zoomIn: false,\r\n    guide: true\r\n  });\r\n\r\n  // -1: counter-clockwise, 0: idle, 1: clockwise\r\n  const [rotating, setRotating] = useState(0);\r\n\r\n  const [power, setPower] = useState(1);\r\n\r\n  // Initialize Space World\r\n  useEffect(() => {\r\n    Common.setDecomp(require('poly-decomp'))\r\n    // create an engine\r\n    const engine = Engine.create({\r\n      gravity: {\r\n        scale: 0\r\n      },\r\n    });\r\n\r\n    // create a renderer\r\n    const render = Render.create({\r\n      canvas: canvasRef.current as HTMLCanvasElement,\r\n      engine: engine,\r\n      options: renderOptions\r\n    });\r\n\r\n    // Add doggo rocket\r\n    Composite.add(engine.world, Doggo);\r\n\r\n    // Add planet, asteroids\r\n    Composite.add(engine.world, [Moon, Earth]);\r\n    Composite.add(engine.world, Asteroids);\r\n\r\n    // svg corners\r\n    loadCorners().then(corners => {\r\n      Composite.add(engine.world, corners);\r\n    })\r\n\r\n    const { width, height } = renderOptions;\r\n\r\n    // walls\r\n    Composite.add(engine.world, [\r\n      Bodies.rectangle(width / 2, 0, width, 50, { isStatic: true, render: { fillStyle: '#063e7b' } }), // top\r\n      Bodies.rectangle(width / 2, height, width, 50, { isStatic: true, render: { fillStyle: '#063e7b' } }), // bottom\r\n      Bodies.rectangle(width, height / 2, 50, height, { isStatic: true, render: { fillStyle: '#063e7b' } }), // right\r\n      Bodies.rectangle(0, height / 2, 50, height, { isStatic: true, render: { fillStyle: '#063e7b' } }), // left\r\n    ]);\r\n\r\n    // add mouse control\r\n    const mouse = Mouse.create(render.canvas),\r\n      mouseConstraint = MouseConstraint.create(engine, {\r\n        mouse: mouse,\r\n        // @ts-ignore\r\n        constraint: {\r\n          stiffness: 0.2,\r\n          render: {\r\n            visible: true\r\n          }\r\n        },\r\n        collisionFilter: {\r\n          mask: 1\r\n        }\r\n      });\r\n\r\n    Composite.add(engine.world, mouseConstraint);\r\n\r\n    // run the renderer\r\n    Render.run(render);\r\n\r\n    // create runner\r\n    const runner = Runner.create();\r\n\r\n    // run the engine\r\n    Runner.run(runner, engine);\r\n\r\n    setMatter({ engine, render });\r\n\r\n    return () => {\r\n      Render.stop(render);\r\n      Runner.stop(runner);\r\n\r\n      console.log('render stop')\r\n    }\r\n  }, []);\r\n\r\n  // Gravity Effect\r\n  useEffect(() => {\r\n    const { engine, render } = matter;\r\n    if (!(engine && render))\r\n      return;\r\n\r\n    const gravityHandler = () => {\r\n      const resultant = Vector.create(0, 0);\r\n\r\n      // make resultant gravity\r\n      [Moon, Earth].forEach(asteroid => {\r\n        const gravity = Vector.sub(asteroid.position, Doggo.position);\r\n        Vector.add(resultant, Vector.mult(Vector.div(gravity, (Vector.magnitude(gravity) ** 2)), 30), resultant);\r\n      });\r\n\r\n      Body.applyForce(Doggo, Doggo.position, resultant);\r\n    }\r\n    Events.on(engine, 'afterUpdate', gravityHandler);\r\n    return () => {\r\n      Events.off(engine, 'afterUpdate', gravityHandler)\r\n      console.log('gravity stopped')\r\n    };\r\n  }, [matter]);\r\n\r\n  // Boost Effect\r\n  useEffect(() => {\r\n    const { engine, render } = matter;\r\n\r\n    if (!(engine && render))\r\n      return;\r\n    if (!options.boost)\r\n      return;\r\n\r\n    const smokes: Matter.Body[] = [];\r\n    let frameCounter = 0;\r\n\r\n    const boostHandler = () => {\r\n      frameCounter++;\r\n\r\n      // smokes are getting bigger in each frame\r\n      smokes.forEach((smoke) => {\r\n        if (smoke.render.opacity)\r\n          smoke.render.opacity *= 0.90\r\n        Body.scale(smoke, 1.02, 1.02);\r\n      });\r\n\r\n      const origin = Vector.clone(Doggo.position);\r\n      const unitForce = Vector.create(Math.sin(Doggo.angle), -Math.cos(Doggo.angle));\r\n\r\n      Body.applyForce(Doggo, origin, Vector.mult(unitForce, 0.2 * (power + 1)));\r\n\r\n      // 4 smokes in 1sec (per 15frame)\r\n      if (frameCounter === 15) {\r\n        frameCounter = 0;\r\n        const smoke = Bodies.circle(origin.x - 90 * unitForce.x, origin.y - 90 * unitForce.y, 25, {\r\n          render: {\r\n            fillStyle: 'skyblue',\r\n          },\r\n          collisionFilter: {\r\n            category: 2\r\n          },\r\n          isSensor: true\r\n        });\r\n\r\n        smokes.unshift(smoke);\r\n        Composite.add(engine.world, smoke);\r\n\r\n        if (smokes.length === 5)\r\n          Composite.remove(engine.world, smokes.pop() as Matter.Body);\r\n\r\n        smokes.forEach(smoke => Body.applyForce(smoke, smoke.position, Vector.div(unitForce, -100)))\r\n      }\r\n    }\r\n    Events.on(matter.engine, 'afterUpdate', boostHandler);\r\n    return () => {\r\n      console.log('boost stopped')\r\n      smokes.forEach(smoke => Composite.remove(engine.world, smoke));\r\n      Events.off(matter.engine, 'afterUpdate', boostHandler);\r\n    };\r\n  }, [matter, options.boost, power]);\r\n\r\n  // Camera Effect\r\n  useEffect(() => {\r\n    const { engine, render } = matter;\r\n    if (!(engine && render))\r\n      return;\r\n\r\n    if (!options.zoomIn) {\r\n      Render.lookAt(render, {\r\n        min: { x: 0, y: 0 },\r\n        max: { x: renderOptions.width, y: renderOptions.height },\r\n      });\r\n    } else {\r\n      // move camera to doggo\r\n      const cameraHandler = () => {\r\n        const { x, y } = Doggo.position;\r\n        Render.lookAt(matter.render as Render, {\r\n          min: { x: x - 400, y: y - 400 },\r\n          max: { x: x + 400, y: y + 400 },\r\n        });\r\n      }\r\n      Events.on(matter.engine, 'afterUpdate', cameraHandler);\r\n      return () => {\r\n        console.log('camera stopped')\r\n        Events.off(matter.engine, 'afterUpdate', cameraHandler);\r\n      }\r\n    }\r\n  }, [matter, options.zoomIn]);\r\n\r\n  // Guide Effect\r\n  useEffect(() => {\r\n    const { engine, render } = matter;\r\n    const { guide, zoomIn } = options;\r\n    if (!(engine && render && guide))\r\n      return;\r\n\r\n    // show distance from the moon\r\n    const guideHandler = () => {\r\n      const doggoToMoon = Vector.sub(Moon.position, Doggo.position);\r\n      const distance = Vector.magnitude(doggoToMoon) | 0;\r\n\r\n      if (distance < 300)\r\n        return;\r\n\r\n      const { x, y } = Doggo.position;\r\n\r\n      const ctx = render.context;\r\n\r\n      ctx.strokeStyle = 'white';\r\n      ctx.lineWidth = 11;\r\n      ctx.beginPath();\r\n      ctx.setLineDash([50, 100]);\r\n\r\n      const from = zoomIn ? {\r\n        x: renderOptions.width / 2,\r\n        y: renderOptions.height / 2,\r\n      } : {\r\n        x, y\r\n      }\r\n\r\n      ctx.moveTo(from.x, from.y);\r\n\r\n      const multiple = zoomIn ? renderOptions.width / 800 : 1; // divisor is the size of camera viewport\r\n\r\n      const to = zoomIn ? {\r\n        x: renderOptions.width / 2 + doggoToMoon.x * multiple,\r\n        y: renderOptions.height / 2 + doggoToMoon.y * multiple\r\n      } : {\r\n        ...Moon.position\r\n      }\r\n\r\n      ctx.lineTo(to.x, to.y);\r\n      ctx.stroke();\r\n\r\n      ctx.font = '200px sans';\r\n      ctx.fillStyle = 'white';\r\n      ctx.fillText(`Moon: ${distance}km`, from.x - 700, from.y + (zoomIn ? 600 : 300));\r\n    }\r\n    Events.on(matter.engine, 'afterUpdate', guideHandler);\r\n    return () => {\r\n      console.log('guide stopped')\r\n      Events.off(matter.engine, 'afterUpdate', guideHandler);\r\n    }\r\n  }, [matter, options.zoomIn, options.guide]);\r\n\r\n  useEffect(() => {\r\n    console.log(rotating);\r\n    if (rotating) {\r\n      const rotationHandler = () => {\r\n        Doggo.torque = rotating * 30;\r\n      }\r\n\r\n      Events.on(matter.engine, 'afterUpdate', rotationHandler);\r\n      return () => {\r\n        console.log('rotation stopped');\r\n        Events.off(matter.engine, 'afterUpdate', rotationHandler);\r\n      }\r\n    }\r\n  }, [matter, rotating]);\r\n\r\n  return (\r\n    <div className={styles.spaceContainer}>\r\n      <div className={styles.title}>🚀 Trip to the Moon</div>\r\n      <canvas ref={canvasRef} style={{ width: '100%', borderRadius: '20px' }}>\r\n      </canvas>\r\n      <div className={styles.controlPanel}>\r\n        {/*<div>⚙️ Control Panel</div>*/}\r\n        <hr />\r\n        <div className={styles.flexbox}>\r\n          <Controller\r\n            rotateLeft={() => setRotating(-1)}\r\n            rotateRight={() => setRotating(1)}\r\n            cancel={() => setRotating(0)} />\r\n          <div className={styles.optionContainer}>\r\n            {\r\n              Object.keys(options).map((option, idx) => {\r\n                const key = option as keyof ControlPanelOptions;\r\n                const val = options[key];\r\n                return (\r\n                  <Switch checked={val} toggle={() => setOptions({ ...options, [option]: !val })} key={idx}>\r\n                    {getKeyString(key)}\r\n                  </Switch>);\r\n              })\r\n            }\r\n          </div>\r\n        </div>\r\n        <Gear power={power} change={(power) => setPower(power)} />\r\n\r\n      </div>\r\n    </div>)\r\n}","import React from 'react';\nimport logo from './logo.svg';\nimport './App.css';\nimport World from './components/world';\n\nfunction App() {\n  return (\n    <div style={{\n      display: 'flex',\n      alignItems: 'center',\n      height: '100%'\n    }}>\n      <World/>\n    </div>\n  );\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport 'pathseg'\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"spaceContainer\":\"space_spaceContainer__2Kbgu\",\"controlPanel\":\"space_controlPanel__1yvsf\",\"optionContainer\":\"space_optionContainer__YvUj0\",\"flexbox\":\"space_flexbox__30PBO\",\"title\":\"space_title__2lGYu\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"slider\":\"gear_slider__2vTBv\",\"step\":\"gear_step__2VqHv\",\"rail\":\"gear_rail__1p-g4\",\"bar\":\"gear_bar__1e6Hm\",\"thumb\":\"gear_thumb__kC3pp\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"switch\":\"switch_switch__1UH8j\",\"slider\":\"switch_slider__3leRR\",\"round\":\"switch_round__2_W7E\",\"switchContainer\":\"switch_switchContainer__3UYYg\"};"],"sourceRoot":""}